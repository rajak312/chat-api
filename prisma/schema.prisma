generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  username   String   @unique
  created_at DateTime @default(now())

  passkeys          Passkey[]
  WebAuthnChallenge WebAuthnChallenge[]
}

model Passkey {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  userId         String    @db.ObjectId
  user           User      @relation(fields: [userId], references: [id])
  webAuthnUserID String    @unique
  publicKey      Bytes
  counter        Int
  transports     String[]
  deviceType     String
  backedUp       Boolean
  createdAt      DateTime  @default(now())
  lastUsed       DateTime?
}

model WebAuthnChallenge {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  userId    String        @db.ObjectId
  challenge String
  type      ChallengeType
  expiresAt DateTime
  createdAt DateTime      @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum ChallengeType {
  REGISTRATION
  AUTHENTICATION
}
